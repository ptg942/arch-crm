import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable, tap } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class AuthService {
  private apiUrl = 'http://localhost:3000/api'; // üëà –£–∫–∞–∂–∏—Ç–µ –≤–∞—à URL
  private readonly TOKEN_KEY = 'auth_token';

  constructor(private http: HttpClient) {}

  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
  login(credentials: { email: string; password: string }): Observable<any> {
    return this.http
      .post<{ access_token: string }>(`${this.apiUrl}/auth/login`, credentials)
      .pipe(
        tap((response) => {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ localStorage –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ª–æ–≥–∏–Ω–µ
          this.setToken(response.access_token);
        })
      );
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã—Ö–æ–¥–∞
  logout(): void {
    localStorage.removeItem(this.TOKEN_KEY);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
  private setToken(token: string): void {
    localStorage.setItem(this.TOKEN_KEY, token);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
  getToken(): string | null {
    return localStorage.getItem(this.TOKEN_KEY);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  isAuthenticated(): boolean {
    return this.getToken() !== null;
  }
}
